builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
__vsc_prompt_cmd_original
ls --color=auto -a
cd freeCodeCamp/
ls --color=auto
cd test
ls --color=auto
cd ../..
clear
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp/
pwd
ls --color=auto
cd test/
pwd
ls --color=auto
cd ..
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules/
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
more README.md
ls --color=auto
more LICENSE-MIT
__vsc_prompt_cmd_original
clear
ls --color=auto
cd src
pwd
ls --color=auto
more index.js
cd
ls --color=auto
ls --color=auto
ls --color=auto -a
cd /has
cd ~
cd ..
ls --color=auto
cd ..
ls --color=auto
cd workspace/project/freeCodeCamp/node_modules/hs
cd workspace/project/freeCodeCamp/node_modules/has
clear
cd ..
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.html
ls --color=auto
ls --color=auto
touch styles.css
clear
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto -a
ls --color=auto help
ls --color=auto --help
ls --color=auto a
ls --color=auto -a
clear
cd .
touch background.jpg
touch header.png
mkdir footer.jpeg
ls --color=auto
rmdir footer.jpeg/
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
clear
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
s
ls --color=auto
clear
mkdir images
ls --color=auto
cp background.jpg /images
cp background.jpg ./images
cd images/
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
__vsc_prompt_cmd_original
cp header.png ./images/
cp footer.jpeg images
cd images/
ls --color=auto
cd ..
ls --color=auto
rm header.png footer.jpeg
ls --color=auto
touch footer.jpeg
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
clear
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
cleare
clear
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts
find
mv lato.ttf fonts
mv menlo.otf fonts
find
ls --color=auto
__vsc_prompt_cmd_original
clear
ls --color=auto
cd ~/workspace
cd ..
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
cd workspace/
ls --color=auto
cd project/
ls --color=auto
cd freeCodeCamp/
ls --color=auto
cd test/
ls --color=auto
cd ..
ls --color=auto
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd website/
mkdir client
mkdir client/src
ls --color=auto
mv index.html client/src
find
mv index.js client/src/
mv styles.css client/src/
find
find client/
find -help
find --help
find -name index.html
find -name styles.css
find -name src
find
cd client/
mkdir assets
cd assets/
cd images
mkdir images
cd images/
touch background.jpg
cd /website
cd website
cd ~/website
cd ~/project/website
cd ../..
cd ..
cd client/assets/images/
cd ../../..
ls --color=auto
cd images/
ls --color=auto
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
find
find -name images
mv header.png ./client/assets/images
find -name header.png
find -name footer.jpeg
mv ./images/footer.jpeg ./client/assets/images
find
rmdir images/
rm ./images/background.jpg
rmdir images/
ls --color=auto
mkdir ./client/assets/icons
mv CodeAlly.svg ./client/assets/icons/
find
find
mv CodeRoad.svg ./client/assets/icons/
ls --color=auto
mv freeCodeCamp.svg ./client/assets/icons/
find
mkdir ./client/assets/fonts
touch ./client/assets/fonts/roboto-bold-woff
touch ./client/assets/fonts/roboto-bold.woff
touch ./client/assets/fonts/roboto-light.woff
find
find -name fonts
find ./client/assets/fonts/
touch ./client/assets/fonts/lato-bold.ttf
touch ./client/assets/fonts/lato-light.ttf
find
rm --help
ls --color=auto
rm -r fonts
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo "Ifinished the boilerplate!"
echo "I finished the boilerplate!"
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
cd ..
ls --color=auto
mv website/ website-boilerplate
ls --color=auto
copy --help
cp --help
ls --color=auto
cp -r website-boilerplate/ toms-website
ls --color=auto
ls --color=auto
find
find toms-website/
find website-boilerplate/
clear
echo goodbye terminal
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git
git branch
git status
